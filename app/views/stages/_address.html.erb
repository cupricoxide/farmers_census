<script type="text/javascript" charset="utf-8">   

	// Create a standard icon TODO: get the fingure print graphic from Serverine
	var icon_standard = addOptionsToIcon(new GIcon(),{shadowSize : new GSize(37,34),iconAnchor : new GPoint(9,34),infoWindowAnchor : new GPoint(9,2),infoShadowAnchor : new GPoint(18,25),shadow : "/images/shadow50.png",image : "/images/marker.png",iconSize : new GSize(20,34)});

	var map;
	window.onload = addCodeToFunction(window.onload,function() {
	if (GBrowserIsCompatible()) {
	map = new GMap2(document.getElementById("map_canvas"));

	// remove all map types not needed  and add Physical map
	map.removeMapType(G_SATELLITE_MAP);    
	map.removeMapType(G_HYBRID_MAP);
	map.addMapType(G_PHYSICAL_MAP)
  map.removeMapType(G_NORMAL_MAP);	
	map.addControl(new GLargeMapControl());
 	map.addControl(new GMapTypeControl());

	// center the map
  var pointCenter = new GLatLng(37.7185903255881,-99.052734375);	
	map.setCenter(pointCenter,3);
  
	// create the bottom left/top right coord for the overlay and add it as a 
	// GGroundOverlay pinning it to those bbox coords
  var pointSW = new GLatLng(23.226236,-127.111816);
	var pointNE = new GLatLng(52.643063,-64.599609);	
	var groundOverlay = new GGroundOverlay("http://img37.picoodle.com/img/img37/4/7/22/f_handdrawntrm_b7407d9.png", 
																					new GLatLngBounds(pointSW, pointNE));
	map.addOverlay(groundOverlay); 
	
	// Display a rectangle in the center of the map at about a quarter of
	// the size of the main map
	var bounds = map.getBounds();
	var southWest = bounds.getSouthWest();
	var northEast = bounds.getNorthEast();
	var lngDelta = (northEast.lng() - southWest.lng());
	var latDelta = (northEast.lat() - southWest.lat());
	var rectBounds = new GLatLngBounds(
	    new GLatLng(southWest.lat() + latDelta,
	                southWest.lng() + lngDelta),
	    new GLatLng(northEast.lat() - latDelta,
	                northEast.lng() - lngDelta));
	map.addOverlay(new Rectangle(rectBounds, null, '#F5DEB3', '#F5DEB3', 70 ));
	
 	<%- unless @current_survey.lat.nil? or  @current_survey.lat.nil?   -%>
  	create_draggable_marker_for_edit(<%= @current_survey.lng.to_f %>, <%= @current_survey.lat.to_f %>);
	  pointCenter = new GLatLng(<%= @current_survey.lat.to_f %>,<%= @current_survey.lng.to_f %>);	
		map.setCenter(pointCenter,5);
	<%- end -%>
	
 	<%- unless @current_survey.full_address.nil?   -%>
 		   // TODO: add a merker for full address 
	<%- end -%>

	}
	});                                                                          

</script>

<div id="map_canvas" style="width: 640px; height: 320px" ></div>

<div class="form_row">
	<%= image_tag 'tick.png', :id => 'address-good-icon', :title => 'valid address' , :alt => 'valid address' %>
	<%= image_tag 'exclamation.png', :id => 'address-warning-icon' , :title => 'invalid address', :alt => 'invalid address' %>
	<%= image_tag 'question-mark.gif', :id => 'address-unsure-icon' , :title => 'address unvarified' , :alt => 'address unvarified' %>
	<%= image_tag 'spinner.gif', :alt=>"spinner", :id=>"spinner", :style=>"display:none;", :alt => 'checking address...' %>
	
	<%= link_to_remote 'check address',
	      :url => {:controller => 'stages', :action => 'validate_address'},
	      :before => "Element.show('spinner');",
	      :complete => "Element.hide('spinner');",
	      :with => "'address='+encodeURI($F('street address')+','+$F('city')+','+$F('state')+','+$F('postal code')+','+$F('country'))" %>
</div>
<br/>                                                                                                            
<%# TODO: remove COUNTY from the database schema %>
